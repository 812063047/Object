package com.xzq.bos.service.impl;

import java.util.List;

import org.apache.commons.lang3.StringUtils;
import org.hibernate.criterion.DetachedCriteria;
import org.hibernate.criterion.Restrictions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.xzq.bos.dao.ISubareaDao;
import com.xzq.bos.domain.Staff;
import com.xzq.bos.domain.Subarea;
import com.xzq.bos.service.ISubareaService;
import com.xzq.bos.utils.PageBean;

@Service
@Transactional
public class SubareaServiceImpl implements ISubareaService {
	
	@Autowired
	private ISubareaDao subareaDao;

	/* 分页实现类 
	 * (non-Javadoc)
	 * @see com.xzq.bos.service.ISubareaService#pageQuery(com.xzq.bos.utils.PageBean)
	 */
	@Override
	public void pageQuery(PageBean pageBean) {
		subareaDao.pageQuery(pageBean);
		
	}

	/* 
	 * 添加地区
	 * (non-Javadoc)
	 * @see com.xzq.bos.service.ISubareaService#save(com.xzq.bos.domain.Subarea)
	 */
	@Override
	public void save(Subarea model) {
		subareaDao.save(model);		
	}

	/* 通过ID查找定区
	 * (non-Javadoc)
	 * @see com.xzq.bos.service.ISubareaService#findById(java.lang.String)
	 */
	@Override
	public Subarea findById(String id) {
		return subareaDao.findById(id);
	}

	/* 更新定区
	 * (non-Javadoc)
	 * @see com.xzq.bos.service.ISubareaService#update(com.xzq.bos.domain.Subarea)
	 */
	@Override
	public void update(Subarea subarea) {
		subareaDao.update(subarea);		
	}

	/* 删除地区
	 * (non-Javadoc)
	 * @see com.xzq.bos.service.ISubareaService#deleteBatch(java.lang.String)
	 */
	@Override
	public void deleteBatch(String ids) {
	if(StringUtils.isNoneBlank(ids)) {
		String [] subarea=ids.split(",");
		for (String id : subarea) {
			subareaDao.delete1(id);
		}
	 }
	}

	
	/* 分区数据导出
	 * (non-Javadoc)
	 * @see com.xzq.bos.service.ISubareaService#findAll()
	 */
	@Override
	public List<Subarea> findAll() {
		return subareaDao.findAll();
	}

	/* 
	 * 所有未关联到定区的分区，返回json数据
	 * (non-Javadoc)
	 * @see com.xzq.bos.service.ISubareaService#findListAssociation()
	 */
	@Override
	public List<Subarea> findListAssociation() {
		DetachedCriteria detachedCriteria=DetachedCriteria.forClass(Subarea.class);
		//查询条件过滤，分区对象的decidedzone属性为null
		detachedCriteria.add(Restrictions.isNull("decidedzone"));
		
		List<Subarea> subareaList=subareaDao.findByCriteria(detachedCriteria);
		return subareaList;
	}

	@Override
	public List<Subarea> findListByDecidedzoneId(String decidedzoneId) {
		DetachedCriteria detachedCriteria = DetachedCriteria.forClass(Subarea.class);
		//添加过滤条件
		detachedCriteria.add(Restrictions.eq("decidedzone.id", decidedzoneId));
		return subareaDao.findByCriteria(detachedCriteria );
	}
}
